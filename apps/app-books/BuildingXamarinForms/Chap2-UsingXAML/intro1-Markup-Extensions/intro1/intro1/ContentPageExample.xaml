<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             x:Class="intro1.ContentPageExample">
    <ContentPage.Resources>
        <!--Use the Array markup extension to define arrays with objects of a specific Type.-->
        <x:Array Type="{x:Type sys:String}" x:Key="array">
            <sys:String>Hello</sys:String>
            <sys:String>World</sys:String>
        </x:Array>
    </ContentPage.Resources>
    <ContentPage.Padding>
        <OnPlatform x:TypeArguments="Thickness">
            <On Platform="iOS" Value="10, 20, 10, 5"/>
            <On Platform="Android" Value="10, 0, 10, 5"/>
        </OnPlatform>
    </ContentPage.Padding>
    <ContentPage.Content>
        <ScrollView>
            <!--HeightRequest: Gets or sets the desired height override of this element.-->
            <StackLayout HeightRequest="1500">
                <!--Adding External Class Libraries-->
                <!--demonstrates how to use the .NET System library
                in the assembly mscorlib.dll in XAML in order to use 
                System.String to assign a string literal to a Label.-->
                <Label>
                    <sys:String>Hello System.String</sys:String>
                </Label>
                <!--The Static markup extension is used to access static fields, properties, and constant fields
                as well as enumeration members.-->
                <BoxView Color="{x:Static Color.Maroon}" WidthRequest="150" HeightRequest="150"/>
                <!--Markup Extensions Using Element Syntax-->
                <BoxView WidthRequest="150" HeightRequest="150">
                    <BoxView.Color>
                        <x:Static>Color.Lime</x:Static>
                    </BoxView.Color>
                </BoxView>
                <!--Use a Picker view to create a drop-down list, by assigning an Array to the
                Picker's ItemsSource, like this:-->
                <Picker>
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type sys:String}" x:Key="array">
                            <sys:String>Hello</sys:String>
                            <sys:String>World</sys:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>
                <!--The Reference markup extension is used in combination with the Name directive to
                reference an object previously declared in the XAML.-->
                <Label x:Name="MyLabel" Text="Hello Entry" />
                <!-- Binding: A single 1:1 immutable data binding.-->
                <Entry Text="{Binding Path=Text, Source={x:Reference MyLabel}}" />
                <!--Utilizing Constructors and Passing in Parameters Using x:Arguments-->
                <BoxView>
                    <BoxView.Color>
                        <Color>
                            <x:Arguments>
                                <x:Double>0.25</x:Double>
                                <x:Double>0.75</x:Double>
                                <x:Double>0.2</x:Double>
                                <x:Double>0.9</x:Double>
                            </x:Arguments>
                        </Color>
                    </BoxView.Color>
                </BoxView>
                <!--Constructing Objects Using Factory Methods-->
                <BoxView>
                    <BoxView.Color>
                        <Color x:FactoryMethod="FromHex">
                            <x:Arguments>
                                <x:String>#02dd52</x:String>
                            </x:Arguments>
                        </Color>
                    </BoxView.Color>
                </BoxView>
                <!--A Xamarin.Forms.View that allows date picking.-->
                <DatePicker />
            </StackLayout>
        </ScrollView>

    </ContentPage.Content>
</ContentPage>